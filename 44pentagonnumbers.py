#!/usr/bin/python
#coding:utf-8

"""
    Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

    1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

    It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

    Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""

from collections import deque

d = 10**12 #guess.. we only need to make sure we find our first pentagon number within this limit
n1 = 0
n2 = 0


def pentagon(x):
    x = int(x)
    return x*(3*x-1)/2

numbers = deque([pentagon(1)])
setnums = set([pentagon(1)]) #set because speed kills
n = 2
num = pentagon(n)
while num>>1 < d:
    for i in range(len(numbers)/2): #only need to check half because of symmetry
        num1 = numbers[i]
        num2 = num-numbers[i]
        if num2 in setnums and num2-num1 in setnums:
            d = num2-num1
            n1 = num1
            n2 = num2
            #print "new distance found {}\n{} - {}".format(d,num2,num1)
    n+=1
    numbers.append(num)
    setnums.add(num)
    num = pentagon(n)
print "number1: {}\nnumber2: {}\nsum: {}\ndiff: {}".format(n1,n2,n1+n2,n2-n1)
